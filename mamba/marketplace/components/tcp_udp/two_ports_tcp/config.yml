################################################################################################
##
##  Copyright (c) Mamba Developers. All rights reserved.
##  Licensed under the MIT License. See License.txt in the project root for license information.
##
################################################################################################

name: Two Ports TCP Controller
version: 0.1
status: Partial interface implementation
maintainer: Mamba Developers
maintainer_email: mambaframework@gmail.com

instrument:
  address: 0.0.0.0
  port:
    tc: 8086
    tm: 8087
  encoding: utf-8
  terminator:
    write: "\r\n"
    read: "\n"

parameters:
  connected:
    # Set parameter type.
    type: int

    # Set parameter initial value upon instrument initialization.
    initial_value: 0

    # Set parameter description.
    description: Connection status to TCP server

    # Parameter setter configuration.
    set:
      # Alias allows to access parameter under another name.
      # Connect is an special ID, to command connect/disconnect from the equipment.
      alias: connect
      # Setter function signature.
      signature:
        - connect:
            type: int
            valid: [0, 1]

    # Parameter getter configuration.
    get:

  raw_query:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: ''

    # Set parameter description.
    description: Raw query to intrument

    # Parameter setter configuration.
    set:
      signature: [raw_query: {type: str}]
      instrument_command:
        - query: '{:}'

    # Parameter getter configuration.
    get:

  raw_write:
    # Set parameter description.
    description: Raw write to intrument

    # Parameter setter configuration.
    set:
      signature: [raw_write: {type: str}]
      instrument_command: [write: '{:}']

  clear:
    # Set parameter description.
    description: Clear status

    # Parameter setter configuration.
    set:
      instrument_command: [write: '*CLS']

  idn:
    # Set parameter type.
    type: str

    # Set parameter description.
    description: Instrument identification

    # Parameter getter configuration.
    get:
      instrument_command:
        - query: 'IDN?'

  sys_err:
    # Set parameter type.
    type: str

    # Set parameter description.
    description: Oldest error in queue

    # Parameter getter configuration.
    get:
      instrument_command:
        - query: 'SYST:ERR?'

  parameter_1:
    # Set parameter type.
    type: int

    # Parameter setter configuration.
    set:
      signature: [value: {type: int}]
      instrument_command:
        - write: 'PARAMETER_1 {:}'

    # Parameter getter configuration.
    get:
      instrument_command:
        - query: 'PARAMETER_1?'

  parameter_2:
    # Set parameter type.
    type: int

    # Parameter setter configuration.
    set:
      signature: [value: {type: int}]
      instrument_command:
        - write: 'PARAMETER_2 {:}'

    # Parameter getter configuration.
    get:
      instrument_command:
        - query: 'PARAMETER_2?'

  parameter_3:
    # Set parameter type.
    type: int

    # Parameter setter configuration.
    set:
      signature: [value: {type: int}]
      instrument_command:
        - write: 'PARAMETER_3 {:}'

    # Parameter getter configuration.
    get:
      instrument_command:
        - query: 'PARAMETER_3?'
