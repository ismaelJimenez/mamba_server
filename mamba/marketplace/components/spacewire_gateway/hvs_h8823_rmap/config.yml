#############################################################################
##
## Copyright (C) 2020 The Mamba Company.
## Contact: themambacompany@gmail.com
##
## This file is part of Mamba Server.
##
## $MAMBA_BEGIN_LICENSE:LGPL$
## Commercial License Usage
## Licensees holding valid commercial Mamba licenses may use this file in
## accordance with the commercial license agreement provided with the
## Software or, alternatively, in accordance with the terms contained in
## a written agreement between you and The Mamba Company. For licensing terms
## and conditions see LICENSE. For further information contact us at
## themambacompany@gmail.com.
##
## GNU Lesser General Public License Usage
## Alternatively, this file may be used under the terms of the GNU Lesser
## General Public License version 3 as published by the Free Software
## Foundation and appearing in the file LICENSE.LGPL3 included in the
## packaging of this file. Please review the following information to
## ensure the GNU Lesser General Public License version 3 requirements
## will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
##
## GNU General Public License Usage
## Alternatively, this file may be used under the terms of the GNU
## General Public License version 2.0 or (at your option) the GNU General
## Public license version 3 or any later version approved by the KDE Free
## Qt Foundation. The licenses are as published by the Free Software
## Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
## included in the packaging of this file. Please review the following
## information to ensure the GNU General Public License requirements will
## be met: https://www.gnu.org/licenses/gpl-2.0.html and
## https://www.gnu.org/licenses/gpl-3.0.html.
##
## $MAMBA_END_LICENSE$
##
#############################################################################

name: HVS H8823 Spacewire Ethernet Gateway Rmap
version: 0.1
status: Partial interface implementation
maintainer: Mamba Developers
maintainer_email: mambaframework@gmail.com

instrument:
  address: 0.0.0.0
  port: 5002
  reply_timeout: 10

rmap:
  target_logical_address: 0x32
  key: 0x20
  initiator_logical_address: 0x20

parameters:
  connected:
    # Set parameter type.
    type: int

    # Set parameter initial value upon instrument initialization.
    initial_value: 0

    # Set parameter description.
    description: Connection status to TCP server

    # Parameter setter configuration.
    set:
      # Alias allows to access parameter under another name.
      # Connect is an special ID, to command connect/disconnect from the equipment.
      alias: connect
      # Setter function signature.
      signature:
        - connect:
            type: int
            valid: [0, 1]

    # Parameter getter configuration.
    get:

  raw_query:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: ''

    # Set parameter description.
    description: Raw query to intrument

    # Parameter setter configuration.
    set:
      signature: [raw_hex: {type: str(hex)}]
      instrument_command:
        - query: '{:}'

    # Parameter getter configuration.
    get:

  raw_write:
    # Set parameter description.
    description: Raw write to intrument

    # Parameter setter configuration.
    set:
      signature: [raw_hex: {type: str(hex)}]
      instrument_command: [write: '{:}']

  last_raw_cmd:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: ''

    # Set parameter description.
    description: Last command sent to gateway

    # Parameter getter configuration.
    get:

  last_raw_reply:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: ''

    # Set parameter description.
    description: Last raw reply received from the gateway

    # Parameter getter configuration.
    get:

  read_single_addr:
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: ''

    # Set parameter description.
    description: Read single address

    # Parameter setter configuration.
    set:
      signature: [address: {type: str(hex)}]

      instrument_command:
        - rmap:
            command_code:
              reply: 1
            address: '{0}'
            size: 4

    # Parameter getter configuration.
    get:

  read_inc_addr:
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: ''

    # Set parameter description.
    description: Read incrementing addresses

    # Parameter setter configuration.
    set:
      signature: [address: {type: str(hex)}, data_length: {type: int}]

      instrument_command:
        - rmap:
            command_code:
              reply: 1
              increment_address: 1
            address: '{0}'
            size: '{1}'

    # Parameter getter configuration.
    get:

  write_single_addr_no_verify_no_reply:
    # Set parameter description.
    description: Write, single address, don’t verify before writing, no reply

    # Parameter setter configuration.
    set:
      signature: [address: {type: str(hex)}, value: {type: str(hex)}]

      instrument_command:
        - rmap:
            command_code:
              write: 1
            address: '{0}'
            size: 4
            body: '{1}'

  write_inc_addr_no_verify_no_reply:
    # Set parameter description.
    description: Write, incrementing addresses, don’t verify before writing, no reply

    # Parameter setter configuration.
    set:
      signature: [address: {type: str(hex)}, value: {type: str(hex)}]

      instrument_command:
        - rmap:
            command_code:
              write: 1
              increment_address: 1
            address: '{0}'
            body: '{1}'

  write_single_addr_no_verify_send_reply:
    # Set parameter description.
    description: Write, single address, don’t verify before writing, send reply

    # Parameter setter configuration.
    set:
      signature: [address: {type: str(hex)}, value: {type: str(hex)}]

      instrument_command:
        - rmap:
            command_code:
              write: 1
              reply: 1
            address: '{0}'
            size: 4
            body: '{1}'

  write_inc_addr_no_verify_send_reply:
    # Set parameter description.
    description: Write, incrementing addresses, don’t verify before writing, send reply

    # Parameter setter configuration.
    set:
      signature: [address: {type: str(hex)}, value: {type: str(hex)}]

      instrument_command:
        - rmap:
            command_code:
              write: 1
              reply: 1
              increment_address: 1
            address: '{0}'
            body: '{1}'

  write_single_addr_verify_no_reply:
    # Set parameter description.
    description: Write, single address, verify before writing, no reply

    # Parameter setter configuration.
    set:
      signature: [address: {type: str(hex)}, value: {type: str(hex)}]

      instrument_command:
        - rmap:
            command_code:
              write: 1
              verify: 1
            address: '{0}'
            size: 4
            body: '{1}'

  write_inc_addr_verify_no_reply:
    # Set parameter description.
    description: Write, incrementing addresses, verify before writing, no reply

    # Parameter setter configuration.
    set:
      signature: [address: {type: str(hex)}, value: {type: str(hex)}]

      instrument_command:
        - rmap:
            command_code:
              write: 1
              verify: 1
              increment_address: 1
            address: '{0}'
            body: '{1}'

  write_single_addr_verify_send_reply:
    # Set parameter description.
    description: Write, single address, verify before writing, send reply

    # Parameter setter configuration.
    set:
      signature: [address: {type: str(hex)}, value: {type: str(hex)}]

      instrument_command:
        - rmap:
            command_code:
              write: 1
              verify: 1
              reply: 1
            address: '{0}'
            size: 4
            body: '{1}'

  write_inc_addr_verify_send_reply:
    # Set parameter description.
    description: Write, incrementing addresses, verify before writing, send reply

    # Parameter setter configuration.
    set:
      signature: [address: {type: str(hex)}, value: {type: str(hex)}]

      instrument_command:
        - rmap:
            command_code:
              write: 1
              verify: 1
              reply: 1
              increment_address: 1
            address: '{0}'
            body: '{1}'
