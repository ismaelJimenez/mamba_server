############################################################################
#
# Copyright (c) Mamba Developers. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
############################################################################

name: HVS H8823 Spacewire Ethernet Gateway TMTC Mock

# Component network configuration

instrument:
  address: 0.0.0.0
  port:
    tc: 12345
    tm: 12346
  encoding: utf-8
  terminator:
    write: "\n"
    read: "\n"
  tm_period: 5 # seconds

# Component TMTC

parameters:
  raw_write:
    # Set parameter description.
    description: Transmits the passed string to the SPW port in a EOP terminated packet

    # Parameter setter configuration.
    set:
      signature:
        - port:
            type: int
            range: [0, 3]
        - hex_msg:
            type: str
      instrument_command:
        - write: 'SPWG_TC_TX_RAW_{0} {1}'

  raw_eep_write:
    # Set parameter description.
    description: Transmits the passed string to the SPW port in a EEP terminated packet

    # Parameter setter configuration.
    set:
      signature:
        - port:
            type: int
            range: [0, 3]
        - hex_msg:
            type: str
      instrument_command:
        - write: 'SPWG_TC_TX_RAW_EEP_{0} {1}'

  raw_part_write:
    # Set parameter description.
    description: Transmit the passed string to the SPW port in an unterminated packet

    # Parameter setter configuration.
    set:
      signature:
        - port:
            type: int
            range: [0, 3]
        - hex_msg:
            type: str
      instrument_command:
        - write: 'SPWG_TC_TX_RAW_PART_{0} {1}'

  spw_link_autostart:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    set:
      signature:
        - status:
            type: str
            valid: ['ENA', 'DIS']
        - port:
            type: int
            range: [0, 3]
      instrument_command:
        - write: 'SPWG_TC_SPW_LINK_AUTO_{0}_{1}'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_AUTOSTART {:}'

  credit_error_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_CRED_ERR_CTR {:}'

  disconnect_error_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_DISC_ERR_CTR {:}'

  spw_link_reset:
    # Parameter setter configuration.
    set:
      signature:
        - port:
            type: int
            range: [0, 3]
      instrument_command:
        - write: 'SPWG_TC_SPW_LINK_RESET_{:}'

  spw_link_reset_counters:
    # Parameter setter configuration.
    set:
      signature:
        - port:
            type: int
            range: [0, 3]
      instrument_command:
        - write: 'SPWG_TC_SPW_RST_CTR_{:}'

  tm_period:
    # Parameter setter configuration.
    set:
      signature:
        - seconds:
            type: int
            range: [0.1, 10]
      instrument_command:
        - write: 'SPWG_TC_TM_PERIOD {:}'

  spw_link_enabled:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    set:
      signature:
        - status:
            type: str
            valid: ['ENA', 'DIS']
        - port:
            type: int
            range: [0, 3]
      instrument_command:
        - write: 'SPWG_TC_SPW_LINK_{0}_{1}'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_ENABLED {:}'

  escape_error_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_ESC_ERR_CTR {:}'

  parity_error_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_PAR_ERR_CTR {:}'

  spw_link_status:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_STS {:}'

  spw_link_running:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_RUNNING {:}'

  bytes_received_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_RX_BYTE_CTR {:}'

  eep_received_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SWPG_TM_SPW_RX_EEP_CTR {:}'

  eop_received_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_RX_EOP_CTR {:}'

  spw_link_rx_rate:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_RX_RATE {:}'

  spw_link_start:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    set:
      signature:
        - status:
            type: str
            valid: ['ENA', 'DIS']
        - port:
            type: int
            range: [0, 3]
      instrument_command:
        - write: 'SPWG_TC_SPW_LINK_START_{0}_{1}'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_START {:}'

  spw_link_tcp_connected:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_TCP_CONN {:}'

  spw_link_timecode_enabled:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    set:
      signature:
        - status:
            type: str
            valid: ['ENA', 'DIS']
        - port:
            type: int
            range: [0, 3]
      instrument_command:
        - write: 'SPWG_TC_SPW_TIMECODE_{0}_{1}'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_TIMECODE_ENABLED {:}'

  spw_link_bytes_sent_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_TX_BYTE_CTR {:}'

  spw_link_tx_rate:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    set:
      signature:
        - port:
            type: int
            range: [0, 3]
        - frequency:
            type: int(Hz)
      instrument_command:
        - write: 'SPWG_TC_SPW_TX_CLK_{0} {1}'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_TX_CLK {:}'

  eep_sent_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_TX_EEP_CTR {:}'

  eop_sent_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_TX_EOP_CTR {:}'

  ticks_received_counter:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: '0 0 0 0'

    # Cyclic TM server configuration.
    cyclic_tm_server:
      format: 'SPWG_TM_SPW_RX_TICK_CTR {:}'
