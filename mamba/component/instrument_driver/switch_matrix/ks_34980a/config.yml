name: Keysight 34980a Switch

instrument:
  visa_sim: mock/visa/switch_matrix/ks_34980a.yml
  address: TCPIP0::1.2.3.4::INSTR
  encoding: utf-8
  terminator:
    write: "\n"

topics:
  connect:
    description: Establish Connection with Switch Matrix

  disconnect:
    description: Close connection with Switch Matrix

  raw:
    description: Send a msg command to the instrument
    signature: [[str], None]
    command: '{:}'

  rst:
    description: Clear status
    command: '*CLS'

  rout_close:
    description: Close channel
    signature: [[channel_id], None]
    command: 'ROUT:CLOS {:}'

  rout_open:
    description: Open channel
    signature: [[channel_id], None]
    command: 'ROUT:OPEN {:}'

  rout_open_all:
    description: Open all channels
    signature: [[slot_id], None]
    command: 'ROUT:OPEN:ALL {:}'

  init:
    description: Initiate the scan
    command: 'INIT'

  conf_volt:
    description: Configure channel for DC voltage measurements
    signature: [[str], None]
    command: 'CONF:VOLT:DC {:}'

  conf_scan:
    description: Configure scan list
    signature: [[str], None]
    command: 'ROUT:SCAN {:}'

  trace_on:
    description: Enable channel trace output mode
    signature: [[channel_id], None]
    command: 'SOUR:FUNC:ENAB ON, {:}'

  trace_off:
    description: Disable channel trace output mode
    signature: [[channel_id], None]
    command: 'SOUR:FUNC:ENAB OFF, {:}'

  outp_on:
    description: Enable channel output
    signature: [[channel_id], None]
    command: 'OUTP:STAT ON, {:}'

  outp_off:
    description: Disable channel output
    signature: [[channel_id], None]
    command: 'OUTP:STAT OFF, {:}'

  volt_offs:
    description: Configure channel voltage offset
    signature: [[channel_id], None]
    command: 'SOUR:FUNC:VOLT:OFFS {:}'

  volt_gain:
    description: Configure channel voltage gain
    signature: [[channel_id], None]
    command: 'SOUR:FUNC:VOLT:GAIN {:}'

  trace_ncyc:
    description: Configure channel trace cycle count
    signature: [[channel_id], None]
    command: 'SOUR:FUNC:TRAC:NCYC {:}'

  trace_func:
    description: Configure channel trace function
    signature: [[config], None]
    command: 'TRAC:FUNC {:}'

  trace:
    description: Apply trace to channel
    signature: [[channel_id], None]
    command: 'SOUR:FUNC:TRAC {:}'

  freq:
    description: Configure channel frequency
    signature: [[channel_id], None]
    command: 'SOUR:FUNC:FREQ {:}'

  query_sys_err:
    description: Query the error queue for the oldest item and removes it from the queue
    signature: [[], str]
    command: 'SYST:ERR?'

  tc_query_raw:
    description: Perform msg query to the instrument
    signature: [[str], str]
    command: '{:}'

  query_idn:
    description: Query the instrument identification
    signature: [[], str]
    command: '*IDN?'

  query_rout_close:
    description: Query close state of the channel
    signature: [[channel_id], bool]
    command: 'ROUT:CLOS? {:}'

  query_rout_open:
    description: Query open state of the channel
    signature: [[channel_id], bool]
    command: 'ROUT:OPEN? {:}'

  query_fetch:
    description: Query stored readings from memory
    signature: [[], str]
    command: 'FETCh?'

  query_volt_meas:
    description: Query open state of the channel
    signature: [[str], volt]
    command: 'MEASure:VOLTage:DC? {:}'

  query_channel_res:
    description: Query channel resistance
    signature: [[str], ohm]
    command: 'MEAS:RES? {:}'

  query_trace:
    description: Query the trace output mode
    signature: [[channel_id], None]
    command: 'SOUR:FUNC:ENAB? {:}'

  tm_query_raw:
    description: Retrieve the value of the last msg query
    signature: [[], str]
    command: '{:}'

  query_freq:
    description: Query channel frequency
    signature: [[channel_id], None]
    command: 'SOUR:FUNC:FREQ? {:}'

  query_connected:
    description: Query the connection status to the instrument
    signature: [[], bool]

parameters:
  connected:
    # Set parameter initial value upon instrument initialization.
    initial_value: 0

    setter:
      connect:
      disconnect:
    getter:
      query_connected:
  query_raw_result:
    # Set parameter initial value upon instrument initialization.
    initial_value: ''

    setter:
      tc_query_raw:
    getter:
      tm_query_raw: