name: Keysight 34980a Switch

instrument:
  visa_sim: mock/visa/switch_matrix/ks_34980a.yml
  address: TCPIP0::1.2.3.4::INSTR
  encoding: utf-8
  terminator:
    write: "\n"

topics:
  raw:
    description: Send a msg command to the instrument
    signature: [[str], None]
    instrument_command: '{:}'
    type: set

  rst:
    description: Clear status
    instrument_command: '*CLS'
    type: set

  rout_close:
    description: Close channel
    signature: [[channel_id], None]
    instrument_command: 'ROUT:CLOS {:}'
    type: set

  rout_open:
    description: Open channel
    signature: [[channel_id], None]
    instrument_command: 'ROUT:OPEN {:}'
    type: set

  rout_open_all:
    description: Open all channels
    signature: [[slot_id], None]
    instrument_command: 'ROUT:OPEN:ALL {:}'
    type: set

  init:
    description: Initiate the scan
    instrument_command: 'INIT'
    type: set

  conf_volt:
    description: Configure channel for DC voltage measurements
    signature: [[str], None]
    instrument_command: 'CONF:VOLT:DC {:}'
    type: set

  conf_scan:
    description: Configure scan list
    signature: [[str], None]
    instrument_command: 'ROUT:SCAN {:}'
    type: set

  trace_on:
    description: Enable channel trace output mode
    signature: [[channel_id], None]
    instrument_command: 'SOUR:FUNC:ENAB ON, {:}'
    type: set

  trace_off:
    description: Disable channel trace output mode
    signature: [[channel_id], None]
    instrument_command: 'SOUR:FUNC:ENAB OFF, {:}'
    type: set

  outp_on:
    description: Enable channel output
    signature: [[channel_id], None]
    instrument_command: 'OUTP:STAT ON, {:}'
    type: set

  outp_off:
    description: Disable channel output
    signature: [[channel_id], None]
    instrument_command: 'OUTP:STAT OFF, {:}'
    type: set

  volt_offs:
    description: Configure channel voltage offset
    signature: [[channel_id], None]
    instrument_command: 'SOUR:FUNC:VOLT:OFFS {:}'
    type: set

  volt_gain:
    description: Configure channel voltage gain
    signature: [[channel_id], None]
    instrument_command: 'SOUR:FUNC:VOLT:GAIN {:}'
    type: set

  trace_ncyc:
    description: Configure channel trace cycle count
    signature: [[channel_id], None]
    instrument_command: 'SOUR:FUNC:TRAC:NCYC {:}'
    type: set

  trace_func:
    description: Configure channel trace function
    signature: [[config], None]
    instrument_command: 'TRAC:FUNC {:}'
    type: set

  trace:
    description: Apply trace to channel
    signature: [[channel_id], None]
    instrument_command: 'SOUR:FUNC:TRAC {:}'
    type: set

  freq:
    description: Configure channel frequency
    signature: [[channel_id], None]
    instrument_command: 'SOUR:FUNC:FREQ {:}'
    type: set

  query_sys_err:
    description: Query the error queue for the oldest item and removes it from the queue
    signature: [[], str]
    instrument_command: 'SYST:ERR?'
    type: get

  query_rout_close:
    description: Query close state of the channel
    signature: [[channel_id], bool]
    instrument_command: 'ROUT:CLOS? {:}'
    type: get

  query_rout_open:
    description: Query open state of the channel
    signature: [[channel_id], bool]
    instrument_command: 'ROUT:OPEN? {:}'
    type: get

  query_fetch:
    description: Query stored readings from memory
    signature: [[], str]
    instrument_command: 'FETCh?'
    type: get

  query_volt_meas:
    description: Query open state of the channel
    signature: [[str], volt]
    instrument_command: 'MEASure:VOLTage:DC? {:}'
    type: get

  query_channel_res:
    description: Query channel resistance
    signature: [[str], ohm]
    instrument_command: 'MEAS:RES? {:}'
    type: get

  query_trace:
    description: Query the trace output mode
    signature: [[channel_id], None]
    instrument_command: 'SOUR:FUNC:ENAB? {:}'
    type: get

  query_freq:
    description: Query channel frequency
    signature: [[channel_id], None]
    instrument_command: 'SOUR:FUNC:FREQ? {:}'
    type: get

parameters:
  connected:
    # Set parameter type.
    type: int

    # Set parameter initial value upon instrument initialization.
    initial_value: 0

    # Set parameter description.
    description: Connection status to instrument

    # Parameter setter configuration.
    set:
      # Alias allows to access parameter under another name.
      # Connect is an special ID, to command connect/disconnect from the equipment.
      alias: connect
      # Setter function signature.
      signature:
        - connect:
            type: int
            valid: [0, 1]

    # Parameter getter configuration.
    get:

  raw_query:
    # Set parameter type.
    type: str

    # Set parameter initial value upon instrument initialization.
    initial_value: ''

    # Set parameter description.
    description: Raw query to intrument

    # Parameter setter configuration.
    set:
      signature:
        - raw_query:
            type: str
      instrument_command:
        - query: '{:}'

    # Parameter getter configuration.
    get:

  idn:
    # Set parameter type.
    type: str

    # Set parameter description.
    description: Instrument identification

    # Parameter getter configuration.
    get:
      instrument_command:
        - query: '*IDN?'